// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyManagerApi.Data;

namespace MoneyManagerApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MoneyManagerApi.Models.Bucket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DemarcationId");

                    b.Property<decimal>("InitialValue");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("DemarcationId");

                    b.ToTable("Buckets");
                });

            modelBuilder.Entity("MoneyManagerApi.Models.Demarcation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Demarcations");
                });

            modelBuilder.Entity("MoneyManagerApi.Models.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<int?>("BucketId");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsExtraneous");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("BucketId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("MoneyManagerApi.Models.User", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MoneyManagerApi.Models.Bucket", b =>
                {
                    b.HasOne("MoneyManagerApi.Models.Demarcation", "Demarcation")
                        .WithMany("Buckets")
                        .HasForeignKey("DemarcationId");
                });

            modelBuilder.Entity("MoneyManagerApi.Models.Demarcation", b =>
                {
                    b.HasOne("MoneyManagerApi.Models.User", "User")
                        .WithMany("Demarcations")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MoneyManagerApi.Models.Entry", b =>
                {
                    b.HasOne("MoneyManagerApi.Models.Bucket", "Bucket")
                        .WithMany("Entry")
                        .HasForeignKey("BucketId");
                });
#pragma warning restore 612, 618
        }
    }
}
